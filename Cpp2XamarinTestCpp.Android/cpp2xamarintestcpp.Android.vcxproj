<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|ARM">
      <Configuration>Debug</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|ARM">
      <Configuration>Release</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|ARM64">
      <Configuration>Debug</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|ARM64">
      <Configuration>Release</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x86">
      <Configuration>Debug</Configuration>
      <Platform>x86</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x86">
      <Configuration>Release</Configuration>
      <Platform>x86</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{73eb9594-ae87-497b-9cff-a77038fa0401}</ProjectGuid>
    <Keyword>Android</Keyword>
    <RootNamespace>cpp2xamarintestcpp</RootNamespace>
    <MinimumVisualStudioVersion>14.0</MinimumVisualStudioVersion>
    <ApplicationType>Android</ApplicationType>
    <ApplicationTypeRevision>3.0</ApplicationTypeRevision>
    <ProjectName>Cpp2XamarinTestCpp.Android</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>Clang_5_0</PlatformToolset>
    <AndroidAPILevel>android-21</AndroidAPILevel>
    <UseOfStl>c++_static</UseOfStl>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>Clang_5_0</PlatformToolset>
    <AndroidAPILevel>android-21</AndroidAPILevel>
    <UseOfStl>c++_static</UseOfStl>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x86'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>Clang_5_0</PlatformToolset>
    <AndroidAPILevel>android-21</AndroidAPILevel>
    <UseOfStl>c++_static</UseOfStl>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x86'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>Clang_5_0</PlatformToolset>
    <AndroidAPILevel>android-21</AndroidAPILevel>
    <UseOfStl>c++_static</UseOfStl>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>Clang_5_0</PlatformToolset>
    <AndroidAPILevel>android-21</AndroidAPILevel>
    <UseOfStl>c++_static</UseOfStl>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>Clang_5_0</PlatformToolset>
    <AndroidAPILevel>android-21</AndroidAPILevel>
    <UseOfStl>c++_static</UseOfStl>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>Clang_5_0</PlatformToolset>
    <AndroidAPILevel>android-21</AndroidAPILevel>
    <UseOfStl>c++_static</UseOfStl>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>Clang_5_0</PlatformToolset>
    <AndroidAPILevel>android-21</AndroidAPILevel>
    <UseOfStl>c++_static</UseOfStl>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings" />
  <ImportGroup Label="Shared">
    <Import Project="..\Cpp2XamarinTestCpp.Shared\cpp2xamarintestcpp.Shared.vcxitems" Label="Shared" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" />
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup />
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <AdditionalOptions>-D PLATFORM=0 %(AdditionalOptions)</AdditionalOptions>
      <AdditionalIncludeDirectories>$(ProjectDir)$(PlatformName)\bin\$(Configuration)\OpenCV_install\sdk\native\jni\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <EnableNeonCodegen>true</EnableNeonCodegen>
      <ExceptionHandling>Enabled</ExceptionHandling>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <CppLanguageStandard>c++11</CppLanguageStandard>
    </ClCompile>
    <Link>
      <AdditionalDependencies>
      </AdditionalDependencies>
      <SharedLibrarySearchPath>%(SharedLibrarySearchPath)</SharedLibrarySearchPath>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <LibraryDependencies>$(StlLibraryName);%(LibraryDependencies)</LibraryDependencies>
    </Link>
    <PostBuildEvent>
      <Command>copy /Y "$(TargetPath)" "$(SolutionDir)$(SolutionName).$(TargetPlatformIdentifier)\lib\$(TargetArchAbi)\"</Command>
    </PostBuildEvent>
    <PostBuildEvent>
      <Message>copy dynamic android c++ library</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <AdditionalOptions>-D PLATFORM=0 %(AdditionalOptions)</AdditionalOptions>
      <AdditionalIncludeDirectories>$(ProjectDir)$(PlatformName)\bin\$(Configuration)\OpenCV_install\sdk\native\jni\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <EnableNeonCodegen>true</EnableNeonCodegen>
      <ExceptionHandling>Enabled</ExceptionHandling>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <CppLanguageStandard>c++11</CppLanguageStandard>
    </ClCompile>
    <Link>
      <AdditionalDependencies>
      </AdditionalDependencies>
      <SharedLibrarySearchPath>%(SharedLibrarySearchPath)</SharedLibrarySearchPath>
      <AdditionalLibraryDirectories>$(ProjectDir)$(PlatformName)\bin\$(Configuration)\OpenCV_install\sdk\native\staticlibs\$(TargetArchAbi);$(ProjectDir)$(PlatformName)\bin\$(Configuration)\OpenCV_install\sdk\native\3rdparty\libs\$(TargetArchAbi);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <LibraryDependencies>$(StlLibraryName);%(LibraryDependencies)</LibraryDependencies>
    </Link>
    <PostBuildEvent>
      <Command>copy /Y "$(TargetPath)" "$(SolutionDir)$(SolutionName).$(TargetPlatformIdentifier)\lib\$(TargetArchAbi)\"</Command>
    </PostBuildEvent>
    <PostBuildEvent>
      <Message>copy dynamic android c++ library</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <AdditionalOptions>-D PLATFORM=0 %(AdditionalOptions)</AdditionalOptions>
      <AdditionalIncludeDirectories>$(ProjectDir)$(PlatformName)\bin\$(Configuration)\OpenCV_install\sdk\native\jni\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ExceptionHandling>Enabled</ExceptionHandling>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <CppLanguageStandard>c++11</CppLanguageStandard>
      <EnableNeonCodegen>true</EnableNeonCodegen>
    </ClCompile>
    <Link>
      <SharedLibrarySearchPath>%(SharedLibrarySearchPath)</SharedLibrarySearchPath>
    </Link>
    <Link>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <IgnoreSpecificDefaultLibraries>
      </IgnoreSpecificDefaultLibraries>
      <AdditionalDependencies>
      </AdditionalDependencies>
      <LibraryDependencies>$(StlLibraryName);%(LibraryDependencies)</LibraryDependencies>
    </Link>
    <PostBuildEvent>
      <Command>copy /Y "$(TargetPath)" "$(SolutionDir)$(SolutionName).$(TargetPlatformIdentifier)\lib\$(TargetArchAbi)\"</Command>
    </PostBuildEvent>
    <PostBuildEvent>
      <Message>copy dynamic android c++ library</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <AdditionalOptions>-D PLATFORM=0 %(AdditionalOptions)</AdditionalOptions>
      <AdditionalIncludeDirectories>$(ProjectDir)$(PlatformName)\bin\$(Configuration)\OpenCV_install\sdk\native\jni\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ExceptionHandling>Enabled</ExceptionHandling>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <CppLanguageStandard>c++11</CppLanguageStandard>
      <EnableNeonCodegen>true</EnableNeonCodegen>
    </ClCompile>
    <Link>
      <SharedLibrarySearchPath>%(SharedLibrarySearchPath)</SharedLibrarySearchPath>
    </Link>
    <Link>
      <AdditionalLibraryDirectories>$(ProjectDir)$(PlatformName)\bin\$(Configuration)\OpenCV_install\sdk\native\staticlibs\$(TargetArchAbi);$(ProjectDir)$(PlatformName)\bin\$(Configuration)\OpenCV_install\sdk\native\3rdparty\libs\$(TargetArchAbi);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <IgnoreSpecificDefaultLibraries>
      </IgnoreSpecificDefaultLibraries>
      <AdditionalDependencies>
      </AdditionalDependencies>
      <LibraryDependencies>$(StlLibraryName);%(LibraryDependencies)</LibraryDependencies>
    </Link>
    <PostBuildEvent>
      <Command>copy /Y "$(TargetPath)" "$(SolutionDir)$(SolutionName).$(TargetPlatformIdentifier)\lib\$(TargetArchAbi)\"</Command>
    </PostBuildEvent>
    <PostBuildEvent>
      <Message>copy dynamic android c++ library</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <AdditionalOptions>-D PLATFORM=0 %(AdditionalOptions)</AdditionalOptions>
      <AdditionalIncludeDirectories>$(ProjectDir)$(PlatformName)\bin\$(Configuration)\OpenCV_install\sdk\native\jni\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ExceptionHandling>Enabled</ExceptionHandling>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <CppLanguageStandard>c++11</CppLanguageStandard>
    </ClCompile>
    <Link>
      <AdditionalDependencies>
      </AdditionalDependencies>
      <SharedLibrarySearchPath>%(SharedLibrarySearchPath)</SharedLibrarySearchPath>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <LibraryDependencies>$(StlLibraryName);%(LibraryDependencies)</LibraryDependencies>
    </Link>
    <PostBuildEvent>
      <Command>copy /Y "$(TargetPath)" "$(SolutionDir)$(SolutionName).$(TargetPlatformIdentifier)\lib\$(TargetArchAbi)\"</Command>
    </PostBuildEvent>
    <PostBuildEvent>
      <Message>copy dynamic android c++ library</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <AdditionalOptions>-D PLATFORM=0 %(AdditionalOptions)</AdditionalOptions>
      <AdditionalIncludeDirectories>$(ProjectDir)$(PlatformName)\bin\$(Configuration)\OpenCV_install\sdk\native\jni\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ExceptionHandling>Enabled</ExceptionHandling>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <CppLanguageStandard>c++11</CppLanguageStandard>
    </ClCompile>
    <Link>
      <AdditionalDependencies>
      </AdditionalDependencies>
      <SharedLibrarySearchPath>%(SharedLibrarySearchPath)</SharedLibrarySearchPath>
      <AdditionalLibraryDirectories>$(ProjectDir)$(PlatformName)\bin\$(Configuration)\OpenCV_install\sdk\native\staticlibs\$(TargetArchAbi);$(ProjectDir)$(PlatformName)\bin\$(Configuration)\OpenCV_install\sdk\native\3rdparty\libs\$(TargetArchAbi);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <LibraryDependencies>$(StlLibraryName);%(LibraryDependencies)</LibraryDependencies>
    </Link>
    <PostBuildEvent>
      <Command>copy /Y "$(TargetPath)" "$(SolutionDir)$(SolutionName).$(TargetPlatformIdentifier)\lib\$(TargetArchAbi)\"</Command>
    </PostBuildEvent>
    <PostBuildEvent>
      <Message>copy dynamic android c++ library</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x86'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <AdditionalOptions>-D PLATFORM=0 %(AdditionalOptions)</AdditionalOptions>
      <AdditionalIncludeDirectories>$(ProjectDir)$(PlatformName)\bin\$(Configuration)\OpenCV_install\sdk\native\jni\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ExceptionHandling>Enabled</ExceptionHandling>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <CppLanguageStandard>c++11</CppLanguageStandard>
    </ClCompile>
    <Link>
      <AdditionalDependencies>
      </AdditionalDependencies>
      <SharedLibrarySearchPath>%(SharedLibrarySearchPath)</SharedLibrarySearchPath>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <LibraryDependencies>$(StlLibraryName);%(LibraryDependencies)</LibraryDependencies>
    </Link>
    <PostBuildEvent>
      <Command>copy /Y "$(TargetPath)" "$(SolutionDir)$(SolutionName).$(TargetPlatformIdentifier)\lib\$(TargetArchAbi)\"</Command>
    </PostBuildEvent>
    <PostBuildEvent>
      <Message>copy dynamic android c++ library</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x86'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <AdditionalOptions>-D PLATFORM=0 %(AdditionalOptions)</AdditionalOptions>
      <AdditionalIncludeDirectories>$(ProjectDir)$(PlatformName)\bin\$(Configuration)\OpenCV_install\sdk\native\jni\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ExceptionHandling>Enabled</ExceptionHandling>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <CppLanguageStandard>c++11</CppLanguageStandard>
    </ClCompile>
    <Link>
      <AdditionalDependencies>
      </AdditionalDependencies>
      <SharedLibrarySearchPath>%(SharedLibrarySearchPath)</SharedLibrarySearchPath>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <LibraryDependencies>$(StlLibraryName);%(LibraryDependencies)</LibraryDependencies>
    </Link>
    <PostBuildEvent>
      <Command>copy /Y "$(TargetPath)" "$(SolutionDir)$(SolutionName).$(TargetPlatformIdentifier)\lib\$(TargetArchAbi)\"</Command>
    </PostBuildEvent>
    <PostBuildEvent>
      <Message>copy dynamic android c++ library</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="pch.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="cpp2xamarintestcppandroid.cpp" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets" />
</Project>